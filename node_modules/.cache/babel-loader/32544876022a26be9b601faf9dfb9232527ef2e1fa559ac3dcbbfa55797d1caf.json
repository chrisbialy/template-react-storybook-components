{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\template-react-storybook-components\\\\src\\\\components\\\\Form\\\\Switch.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FieldContainer } from './FieldContainer';\nimport { palette } from '../palette';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function Switch({\n  label,\n  error,\n  ...htmlInputProps\n}) {\n  return _jsxDEV(FieldContainer, {\n    label: label,\n    error: error,\n    children: _jsxDEV(\"label\", {\n      css: switchStyle,\n      children: [_jsxDEV(\"input\", {\n        className: \"checkbox-component\",\n        ...htmlInputProps,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        className: \"checkbox-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Switch;\nconst width = 40;\nconst padding = 4;\nconst height = width / 2 + padding;\nconst diameter = height - 2 * padding;\nconst switchStyle = css`\n  display: block;\n  margin-top: 2px;\n\n  .checkbox-component {\n    display: none;\n  }\n\n  .checkbox-slider {\n    position: relative;\n    display: inline-block;\n    width: ${width}px;\n    height: ${height}px;\n    background-color: ${palette.secondary};\n    border-radius: ${height}px;\n    transition: background-color 0.3s;\n  }\n\n  .checkbox-component[type='checkbox']:checked + .checkbox-slider {\n    background-color: ${palette.success};\n  }\n\n  .checkbox-slider::before {\n    position: absolute;\n    content: '';\n    height: ${diameter}px;\n    width: ${diameter}px;\n    left: ${padding}px;\n    bottom: ${padding}px;\n    background-color: white;\n    border-radius: 50%;\n    transition: transform 0.3s;\n  }\n\n  .checkbox-component[type='checkbox']:checked + .checkbox-slider::before {\n    transform: translateX(${diameter}px);\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"names":["css","FieldContainer","palette","jsxDEV","_jsxDEV","Switch","label","error","htmlInputProps","children","switchStyle","className","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","width","padding","height","diameter","secondary","success","$RefreshReg$"],"sources":["C:/repos/template-react-storybook-components/src/components/Form/Switch.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { FieldContainer } from './FieldContainer';\r\nimport { palette } from '../palette';\r\n\r\nexport type SwitchProps = Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> & {\r\n  label?: string;\r\n  error?: string;\r\n};\r\n\r\nexport function Switch({ label, error, ...htmlInputProps }: SwitchProps) {\r\n  return (\r\n    <FieldContainer label={label} error={error}>\r\n      <label css={switchStyle}>\r\n        <input className=\"checkbox-component\" {...htmlInputProps} type=\"checkbox\" />\r\n        <span className=\"checkbox-slider\" />\r\n      </label>\r\n    </FieldContainer>\r\n  );\r\n}\r\n\r\nconst width = 40;\r\nconst padding = 4;\r\n\r\nconst height = width / 2 + padding;\r\nconst diameter = height - 2 * padding;\r\n\r\nconst switchStyle = css`\r\n  display: block;\r\n  margin-top: 2px;\r\n\r\n  .checkbox-component {\r\n    display: none;\r\n  }\r\n\r\n  .checkbox-slider {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: ${width}px;\r\n    height: ${height}px;\r\n    background-color: ${palette.secondary};\r\n    border-radius: ${height}px;\r\n    transition: background-color 0.3s;\r\n  }\r\n\r\n  .checkbox-component[type='checkbox']:checked + .checkbox-slider {\r\n    background-color: ${palette.success};\r\n  }\r\n\r\n  .checkbox-slider::before {\r\n    position: absolute;\r\n    content: '';\r\n    height: ${diameter}px;\r\n    width: ${diameter}px;\r\n    left: ${padding}px;\r\n    bottom: ${padding}px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    transition: transform 0.3s;\r\n  }\r\n\r\n  .checkbox-component[type='checkbox']:checked + .checkbox-slider::before {\r\n    transform: translateX(${diameter}px);\r\n  }\r\n`;\r\n"],"mappings":";AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrC,OAAO,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAE,GAAGC;AAA4B,CAAC,EAAE;EACvE,OACEJ,OAAA,CAACH,cAAc;IAACK,KAAK,EAAEA,KAAM;IAACC,KAAK,EAAEA,KAAM;IAAAE,QAAA,EACzCL,OAAA;MAAOJ,GAAG,EAAEU,WAAY;MAAAD,QAAA,GACtBL,OAAA;QAAOO,SAAS,EAAC,oBAAoB;QAAA,GAAKH,cAAc;QAAEI,IAAI,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5EZ,OAAA;QAAMO,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB;AAACC,EAAA,GATeZ,MAAM;AAWtB,MAAMa,KAAK,GAAG,EAAE;AAChB,MAAMC,OAAO,GAAG,CAAC;AAEjB,MAAMC,MAAM,GAAGF,KAAK,GAAG,CAAC,GAAGC,OAAO;AAClC,MAAME,QAAQ,GAAGD,MAAM,GAAG,CAAC,GAAGD,OAAO;AAErC,MAAMT,WAAW,GAAGV,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAakB,KAAK;AAClB,cAAcE,MAAM;AACpB,wBAAwBlB,OAAO,CAACoB,SAAS;AACzC,qBAAqBF,MAAM;AAC3B;AACA;AACA;AACA;AACA,wBAAwBlB,OAAO,CAACqB,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA,cAAcF,QAAQ;AACtB,aAAaA,QAAQ;AACrB,YAAYF,OAAO;AACnB,cAAcA,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4BE,QAAQ;AACpC;AACA,CAAC;AAAC,IAAAJ,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}