{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\template-react-storybook-components2\\\\src\\\\components\\\\Table.tsx\";\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport function Table({\n  headers,\n  data\n}) {\n  return _jsxDEV(\"table\", {\n    css: tableStyles,\n    children: [_jsxDEV(\"thead\", {\n      children: _jsxDEV(\"tr\", {\n        children: headers.map((header, index) => _jsxDEV(\"th\", {\n          children: header.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), _jsxDEV(\"tbody\", {\n      children: data.map((row, index) => _jsxDEV(\"tr\", {\n        children: row.map((cell, cellIndex) => _jsxDEV(\"td\", {\n          children: formatCell(cell, headers[cellIndex].formatter)\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nconst tableStyles = css`\n  width: 100%;\n  border-collapse: collapse;\n\n  th,\n  td {\n    border: 1px solid black;\n\n    padding: 8px;\n    text-align: center;\n  }\n\n  th {\n    background-color: #f2f2f2;\n  }\n\n  tr {\n    background-color: white;\n  }\n    \n  tr:nth-of-type(even) {\n    background-color: #f5f5f5;\n  }\n\n  tr:hover {\n    background-color: #d9d9d9;\n  }\n`;\nconst formatCell = (cellData, formatter) => typeof formatter === 'function' ? formatter(cellData) : cellData;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["css","jsxDEV","_jsxDEV","Table","headers","data","tableStyles","children","map","header","index","title","fileName","_jsxFileName","lineNumber","columnNumber","row","cell","cellIndex","formatCell","formatter","_c","cellData","$RefreshReg$"],"sources":["C:/repos/template-react-storybook-components2/src/components/Table.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\n\r\nexport type HeaderConfig = {\r\n  title: React.ReactNode;\r\n  formatter?: (cell: any) => React.ReactNode;\r\n};\r\n\r\nexport type TableProps = {\r\n  headers: HeaderConfig[];\r\n  data: React.ReactNode[][];\r\n};\r\n\r\nexport function Table({ headers, data }: TableProps) {\r\n  return (\r\n    <table css={tableStyles}>\r\n      <thead>\r\n        <tr>\r\n          {headers.map((header, index) => (\r\n            <th key={index}>{header.title}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            {row.map((cell, cellIndex) => (\r\n              <td key={cellIndex}>{formatCell(cell, headers[cellIndex].formatter)}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nconst tableStyles = css`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n\r\n    padding: 8px;\r\n    text-align: center;\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  tr {\r\n    background-color: white;\r\n  }\r\n    \r\n  tr:nth-of-type(even) {\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  tr:hover {\r\n    background-color: #d9d9d9;\r\n  }\r\n`;\r\n\r\nconst formatCell = (cellData: React.ReactNode, formatter: HeaderConfig['formatter']) =>\r\n  typeof formatter === 'function' ? formatter(cellData) : cellData;\r\n"],"mappings":";AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYrC,OAAO,SAASC,KAAKA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EACnD,OACEH,OAAA;IAAOF,GAAG,EAAEM,WAAY;IAAAC,QAAA,GACtBL,OAAA;MAAAK,QAAA,EACEL,OAAA;QAAAK,QAAA,EACGH,OAAO,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KACzBR,OAAA;UAAAK,QAAA,EAAiBE,MAAM,CAACE;QAAK,GAApBD,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACRb,OAAA;MAAAK,QAAA,EACGF,IAAI,CAACG,GAAG,CAAC,CAACQ,GAAG,EAAEN,KAAK,KACnBR,OAAA;QAAAK,QAAA,EACGS,GAAG,CAACR,GAAG,CAAC,CAACS,IAAI,EAAEC,SAAS,KACvBhB,OAAA;UAAAK,QAAA,EAAqBY,UAAU,CAACF,IAAI,EAAEb,OAAO,CAACc,SAAS,CAAC,CAACE,SAAS;QAAC,GAA1DF,SAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsD,CACzE;MAAC,GAHKL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACM,EAAA,GArBelB,KAAK;AAuBrB,MAAMG,WAAW,GAAGN,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMmB,UAAU,GAAGA,CAACG,QAAyB,EAAEF,SAAoC,KACjF,OAAOA,SAAS,KAAK,UAAU,GAAGA,SAAS,CAACE,QAAQ,CAAC,GAAGA,QAAQ;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}