{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\template-react-storybook-components2\\\\src\\\\storybook\\\\Tree.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import { ComponentMeta, ComponentStory } from '@storybook/react';\\r\\n\\r\\nimport { Tree } from '../components/Tree';\\r\\n\\r\\nexport default {\\r\\n  title: 'Tree',\\r\\n  component: Tree,\\r\\n  parameters: { actions: { argTypesRegex: '^on.*' } },\\r\\n} as ComponentMeta<typeof Tree>;\\r\\n\\r\\nconst Template: ComponentStory<typeof Tree> = (args) => <Tree {...args} />;\\r\\n\\r\\nlet idCounter = 0;\\r\\nfunction nextId() {\\r\\n  return idCounter++;\\r\\n}\\r\\n\\r\\nexport const TreeExample = Template.bind({});\\r\\nTreeExample.args = {\\r\\n  data: [\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 1',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 1',\\r\\n        },\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 2 of Node 1',\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 2',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 2',\\r\\n        },\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 2 of Node 2',\\r\\n          children: [\\r\\n            {\\r\\n              id: nextId(),\\r\\n              label: 'Grandchild 1 of Node 2, Child 2',\\r\\n            },\\r\\n          ],\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 3',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 3',\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"TreeExample\": {\n    \"startLoc\": {\n      \"col\": 46,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 74,\n      \"line\": 11\n    },\n    \"startBody\": {\n      \"col\": 46,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 74,\n      \"line\": 11\n    }\n  }\n};\nimport { Tree } from '../components/Tree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Tree',\n  component: Tree,\n  parameters: {\n    actions: {\n      argTypesRegex: '^on.*'\n    }\n  }\n};\nconst Template = args => /*#__PURE__*/_jsxDEV(Tree, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 57\n}, this);\n_c = Template;\nlet idCounter = 0;\nfunction nextId() {\n  return idCounter++;\n}\nexport const TreeExample = Template.bind({});\nTreeExample.args = {\n  data: [{\n    id: nextId(),\n    label: 'Node 1',\n    children: [{\n      id: nextId(),\n      label: 'Child 1 of Node 1'\n    }, {\n      id: nextId(),\n      label: 'Child 2 of Node 1'\n    }]\n  }, {\n    id: nextId(),\n    label: 'Node 2',\n    children: [{\n      id: nextId(),\n      label: 'Child 1 of Node 2'\n    }, {\n      id: nextId(),\n      label: 'Child 2 of Node 2',\n      children: [{\n        id: nextId(),\n        label: 'Grandchild 1 of Node 2, Child 2'\n      }]\n    }]\n  }, {\n    id: nextId(),\n    label: 'Node 3',\n    children: [{\n      id: nextId(),\n      label: 'Child 1 of Node 3'\n    }]\n  }]\n};\nTreeExample.parameters = {\n  storySource: {\n    source: \"(args) => <Tree {...args} />\"\n  },\n  ...TreeExample.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"TreeExample\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","Tree","jsxDEV","_jsxDEV","title","component","parameters","actions","argTypesRegex","Template","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","idCounter","nextId","TreeExample","bind","data","id","label","children","storySource","source","$RefreshReg$","__namedExportsOrder"],"sources":["C:/repos/template-react-storybook-components2/src/storybook/Tree.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentMeta, ComponentStory } from '@storybook/react';\\r\\n\\r\\nimport { Tree } from '../components/Tree';\\r\\n\\r\\nexport default {\\r\\n  title: 'Tree',\\r\\n  component: Tree,\\r\\n  parameters: { actions: { argTypesRegex: '^on.*' } },\\r\\n} as ComponentMeta<typeof Tree>;\\r\\n\\r\\nconst Template: ComponentStory<typeof Tree> = (args) => <Tree {...args} />;\\r\\n\\r\\nlet idCounter = 0;\\r\\nfunction nextId() {\\r\\n  return idCounter++;\\r\\n}\\r\\n\\r\\nexport const TreeExample = Template.bind({});\\r\\nTreeExample.args = {\\r\\n  data: [\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 1',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 1',\\r\\n        },\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 2 of Node 1',\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 2',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 2',\\r\\n        },\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 2 of Node 2',\\r\\n          children: [\\r\\n            {\\r\\n              id: nextId(),\\r\\n              label: 'Grandchild 1 of Node 2, Child 2',\\r\\n            },\\r\\n          ],\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n    {\\r\\n      id: nextId(),\\r\\n      label: 'Node 3',\\r\\n      children: [\\r\\n        {\\r\\n          id: nextId(),\\r\\n          label: 'Child 1 of Node 3',\\r\\n        },\\r\\n      ],\\r\\n    },\\r\\n  ],\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"TreeExample\":{\"startLoc\":{\"col\":46,\"line\":11},\"endLoc\":{\"col\":74,\"line\":11},\"startBody\":{\"col\":46,\"line\":11},\"endBody\":{\"col\":74,\"line\":11}}};\n    \nimport { ComponentMeta, ComponentStory } from '@storybook/react';\r\n\r\nimport { Tree } from '../components/Tree';\r\n\r\nexport default {\r\n  title: 'Tree',\r\n  component: Tree,\r\n  parameters: { actions: { argTypesRegex: '^on.*' } },\r\n} as ComponentMeta<typeof Tree>;\r\n\r\nconst Template: ComponentStory<typeof Tree> = (args) => <Tree {...args} />;\r\n\r\nlet idCounter = 0;\r\nfunction nextId() {\r\n  return idCounter++;\r\n}\r\n\r\nexport const TreeExample = Template.bind({});\r\nTreeExample.args = {\r\n  data: [\r\n    {\r\n      id: nextId(),\r\n      label: 'Node 1',\r\n      children: [\r\n        {\r\n          id: nextId(),\r\n          label: 'Child 1 of Node 1',\r\n        },\r\n        {\r\n          id: nextId(),\r\n          label: 'Child 2 of Node 1',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: nextId(),\r\n      label: 'Node 2',\r\n      children: [\r\n        {\r\n          id: nextId(),\r\n          label: 'Child 1 of Node 2',\r\n        },\r\n        {\r\n          id: nextId(),\r\n          label: 'Child 2 of Node 2',\r\n          children: [\r\n            {\r\n              id: nextId(),\r\n              label: 'Grandchild 1 of Node 2, Child 2',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: nextId(),\r\n      label: 'Node 3',\r\n      children: [\r\n        {\r\n          id: nextId(),\r\n          label: 'Child 1 of Node 3',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\n\n\nTreeExample.parameters = { storySource: { source: \"(args) => <Tree {...args} />\" }, ...TreeExample.parameters };"],"mappings":";AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,m9CAAm9C;AACn+C;AACA,IAAIC,iBAAiB,GAAG;EAAC,aAAa,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAI3K,SAASC,IAAI,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe;EACbC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAEJ,IAAI;EACfK,UAAU,EAAE;IAAEC,OAAO,EAAE;MAAEC,aAAa,EAAE;IAAQ;EAAE;AACpD,CAAC;AAED,MAAMC,QAAqC,GAAIC,IAAI,iBAAKP,OAAA,CAACF,IAAI;EAAA,GAAKS;AAAI;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC;AAACC,EAAA,GAArEN,QAAqC;AAE3C,IAAIO,SAAS,GAAG,CAAC;AACjB,SAASC,MAAMA,CAAA,EAAG;EAChB,OAAOD,SAAS,EAAE;AACpB;AAEA,OAAO,MAAME,WAAW,GAAGT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5CD,WAAW,CAACR,IAAI,GAAG;EACjBU,IAAI,EAAE,CACJ;IACEC,EAAE,EAAEJ,MAAM,CAAC,CAAC;IACZK,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,CACR;MACEF,EAAE,EAAEJ,MAAM,CAAC,CAAC;MACZK,KAAK,EAAE;IACT,CAAC,EACD;MACED,EAAE,EAAEJ,MAAM,CAAC,CAAC;MACZK,KAAK,EAAE;IACT,CAAC;EAEL,CAAC,EACD;IACED,EAAE,EAAEJ,MAAM,CAAC,CAAC;IACZK,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,CACR;MACEF,EAAE,EAAEJ,MAAM,CAAC,CAAC;MACZK,KAAK,EAAE;IACT,CAAC,EACD;MACED,EAAE,EAAEJ,MAAM,CAAC,CAAC;MACZK,KAAK,EAAE,mBAAmB;MAC1BC,QAAQ,EAAE,CACR;QACEF,EAAE,EAAEJ,MAAM,CAAC,CAAC;QACZK,KAAK,EAAE;MACT,CAAC;IAEL,CAAC;EAEL,CAAC,EACD;IACED,EAAE,EAAEJ,MAAM,CAAC,CAAC;IACZK,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,CACR;MACEF,EAAE,EAAEJ,MAAM,CAAC,CAAC;MACZK,KAAK,EAAE;IACT,CAAC;EAEL,CAAC;AAEL,CAAC;AAIDJ,WAAW,CAACZ,UAAU,GAAG;EAAEkB,WAAW,EAAE;IAAEC,MAAM,EAAE;EAA+B,CAAC;EAAE,GAAGP,WAAW,CAACZ;AAAW,CAAC;AAAC,IAAAS,EAAA;AAAAW,YAAA,CAAAX,EAAA;AAAA,aAAAY,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}